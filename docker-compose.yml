version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: seismicdb
      POSTGRES_USER: neo4j
      POSTGRES_PASSWORD: strongpass123
    volumes:
      - tsdb_data:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5
    container_name: neo4j-hybrid
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/strongpass123
    volumes:
      - neo4j_data:/data

  flask-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: flask-backend
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - timescaledb
      - neo4j
    volumes:
      - ./backend:/app

volumes:
  tsdb_data:
  neo4j_data:
